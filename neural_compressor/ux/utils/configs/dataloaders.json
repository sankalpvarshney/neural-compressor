[
    {
        "name": "ONNXRT",
        "help": null,
        "params": [
            {
                "name": "CIFAR10",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "CIFAR100",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "COCORaw",
                "help": "COCO dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "img_dir",
                        "help": "Image file directory",
                        "value": "val2017",
                        "label": "image directory"
                    },
                    {
                        "name": "anno_dir",
                        "help": "Annotation file, relative to dataset location",
                        "value": "annotations/instances_val2017.json",
                        "label": "annotation file"
                    }
                ]
            },
            {
                "name": "dummy",
                "help": "Dataset used for dummy data generation",
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "shape",
                        "help": "Support create multi shape tensors, use list of tuples for each tuple in the list, will create a such size tensor.",
                        "value": []
                    },
                    {
                        "name": "low",
                        "help": "Low out the tensor value range from [0, 1] to [0, low] or [low, 0] if low < 0, if float, will implement all tensors with same low value.",
                        "value": -128.0
                    },
                    {
                        "name": "high",
                        "help": "High the tensor value by add all tensor element value high. If list, length of list should be same with shape list.",
                        "value": 127.0
                    },
                    {
                        "name": "dtype",
                        "help": "Support multi tensor dtype setting. If list, length of list should be same with shape list, if str, all tensors will use same dtype. dtype support 'float32', 'float16', 'uint8', 'int8', 'int32', 'int64', 'bool'.",
                        "value": "float32"
                    },
                    {
                        "name": "label",
                        "help": "Whether to return 0 as label",
                        "value": "True"
                    }
                ]
            },
            {
                "name": "dummy_v2",
                "help": "Dataset used for dummy data generation",
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "input_shape",
                        "help": "Support create multi shape tensors, use list of tuples for each tuple in the list, will create a such size tensor.",
                        "value": []
                    },
                    {
                        "name": "label_shape",
                        "help": "Support create single or multi label tensors list represent the simple shape of the label.",
                        "value": []
                    },
                    {
                        "name": "low",
                        "help": "Low out the tensor value range from [0, 1] to [0, low] or [low, 0] if low < 0, if float, will implement all tensors with same low value.",
                        "value": -128.0
                    },
                    {
                        "name": "high",
                        "help": "High the tensor value by add all tensor element value high. If list, length of list should be same with shape list.",
                        "value": 127.0
                    },
                    {
                        "name": "dtype",
                        "help": "Support multi tensor dtype setting. If list, length of list should be same with shape list, if str, all tensors will use same dtype. dtype support 'float32', 'float16', 'uint8', 'int8', 'int32', 'int64', 'bool'.",
                        "value": "float32"
                    }
                ]
            },
            {
                "name": "FashionMNIST",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "ImageFolder",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "ImagenetRaw",
                "help": null,
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "data_path",
                        "help": "Root directory of dataset",
                        "value": ""
                    },
                    {
                        "name": "image_list",
                        "help": "Data file, record image_names and their labels",
                        "value": ""
                    }
                ]
            },
            {
                "name": "MNIST",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "GLUE",
                "help": null,
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "data_dir",
                        "help": "The input data dir",
                        "value": ""
                    },
                    {
                        "name": "model_name_or_path",
                        "help": "Path to pre-trained student model or shortcut name",
                        "value": "bert-base-uncased"
                    },
                    {
                        "name": "max_seq_length",
                        "help": "The maximum total input sequence length after tokenization.",
                        "value": 128
                    },
                    {
                        "name": "do_lower_case",
                        "help": "Whether or not to lowercase the input.",
                        "value": true
                    },
                    {
                        "name": "task",
                        "help": "The name of the task to fine-tune. Choices include mrpc, qqp, qnli, rte, sts-b, cola, mnli, wnli.",
                        "value": "mrpc"
                    },
                    {
                        "name": "model_type",
                        "help": "Model type, support 'distilbert', 'bert', 'mobilebert', 'roberta'.",
                        "value": "bert"
                    },
                    {
                        "name": "dynamic_length",
                        "help": "Whether to use fixed sequence length.",
                        "value": false
                    }
                ]
            },
            {
                "name": "custom",
                "help": "Create your own dataset. After you choose this option code template will be generated on the server.",
                "value": ""
            }
        ]
    },
    {
        "name": "TensorFlow",
        "help": null,
        "params": [
            {
                "name": "CIFAR10",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "CIFAR100",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "COCORaw",
                "help": "COCO dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "img_dir",
                        "help": "Image file directory",
                        "value": "val2017",
                        "label": "image directory"
                    },
                    {
                        "name": "anno_dir",
                        "help": "Annotation file, relative to dataset location",
                        "value": "annotations/instances_val2017.json",
                        "label": "annotation file"
                    }
                ]
            },
            {
                "name": "COCORecord",
                "help": "COCO dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "COCONpy",
                "help": "COCO dataset in numpy format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "npy_dir",
                        "help": "Npy file directory",
                        "value": "val2017"
                    },
                    {
                        "name": "anno_dir",
                        "help": "Annotation file directory",
                        "value": "annotations/instances_val2017.json"
                    }
                ]
            },
            {
                "name": "VOCRecord",
                "help": "VOC dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "dummy_v2",
                "help": "Dataset used for dummy data generation",
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "input_shape",
                        "help": "Support create multi shape tensors, use list of tuples for each tuple in the list, will create a such size tensor.",
                        "value": []
                    },
                    {
                        "name": "label_shape",
                        "help": "Support create single or multi label tensors list represent the simple shape of the label.",
                        "value": []
                    },
                    {
                        "name": "low",
                        "help": "Low out the tensor value range from [0, 1] to [0, low] or [low, 0] if low < 0, if float, will implement all tensors with same low value.",
                        "value": -128.0
                    },
                    {
                        "name": "high",
                        "help": "High the tensor value by add all tensor element value high. If list, length of list should be same with shape list.",
                        "value": 127.0
                    },
                    {
                        "name": "dtype",
                        "help": "Support multi tensor dtype setting. If list, length of list should be same with shape list, if str, all tensors will use same dtype. dtype support 'float32', 'float16', 'uint8', 'int8', 'int32', 'int64', 'bool'.",
                        "value": "float32"
                    }
                ]
            },
            {
                "name": "FashionMNIST",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                "name": "ImageFolder",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "ImagenetRaw",
                "help": null,
                "show_dataset_location": false,
                "params": [
                    {
                        "name": "data_path",
                        "help": "Root directory of dataset",
                        "value": ""
                    },
                    {
                        "name": "image_list",
                        "help": "Data file, record image_names and their labels",
                        "value": ""
                    }
                ]
            },
            {
                "name": "ImageRecord",
                "help": "Imagenet dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "MNIST",
                "help": null,
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "train",
                        "help": "If True, creates dataset from train subset, otherwise from validation subset",
                        "value": "False"
                    },
                    {
                        "name": "download",
                        "help": "If true, downloads the dataset from the internet and puts it in root directory. If dataset is already downloaded, it is not downloaded again.",
                        "value": "False"
                    }

                ]
            },
            {
                 "name": "style_transfer",
                 "help": "Dataset used for style transfer task. This Dataset is to construct a dataset from two specific image holders representing content image folder and style image folder.",
                 "show_dataset_location": false,
                 "params": [
                     {
                        "name": "content_path",
                        "help": null,
                        "value": ""
                    },
                     {
                        "name": "style_path",
                        "help": null,
                        "value": ""
                    },
                     {
                        "name": "crop_ratio",
                        "help": "Cropped ratio to each side",
                        "value": 0.1
                    },
                     {
                        "name": "resize_shape",
                        "help": "Target size of image",
                        "value": "256, 256"
                    },
                     {
                        "name": "image_format",
                        "help": "Target image format",
                        "value": "jpg"
                    }
                ]
            },
            {
                "name": "TFRecordDataset",
                "help": "Any dataset in TFRecord format",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    }
                ]
            },
            {
                "name": "bert",
                "help": "Dataset for bert.",
                "value": "",
                "show_dataset_location": true,
                "params": [
                    {
                        "name": "root",
                        "help": null,
                        "value": ""
                    },
                    {
                        "name": "label_file",
                        "help": "Label file path.",
                        "value": "/path/to/dev-v1.1.json"
                    },
                    {
                        "name": "task",
                        "help": "Task type of model",
                        "value": "squad"
                    },
                    {
                        "name": "model_type",
                        "help": "Model type",
                        "value": "bert"
                    }
                ]
            },
            {
                "name": "custom",
                "help": "Create your own dataset. After you choose this option code template will be generated on the server.",
                "value": ""
            }

        ]
    }
]